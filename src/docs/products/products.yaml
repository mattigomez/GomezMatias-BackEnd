openapi: "3.0.1"
info:
  title: API Products
  version: "1.0"
paths:
  /api/dbProducts:
    get:
      summary: Obtiene una lista de todos los productos disponibles
      tags:
        - Products
      responses:
        "200":
          description: Productos obtenidos con exito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error al cargar los productos
    post:
      summary: Agregar un nuevo producto 
      tags:
        - Products
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: "#/components/requestBodies/addProductDb"
      responses:
        "200":
          description: Se agrego el producto con exito
        "400":
          description: Error al agregar el producto 
  /api/dbProducts/mockingProducts:
    get:
      summary: Obtiene 100 productos aleatorios 
      tags:
        - Products
      responses:
        "200":
          description: Productos generados con exito.
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error al obtener los productos
  /api/dbProducts/${productId}:
    put:
      summary: Actualiza las propiedades de un producto
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          require: true
          description: id del producto 
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: Propiedades actualizadas con exito
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Error al actualizar las propiedades del producto
    delete:
      summary: Elimina un producto 
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          require: true
          description: id del producto
      responses:
        "200":
          description: Producto eliminado con exito.
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error al eliminar el producto

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: id de mongo
        name:
          type: string
          description: nombre del producto
        description:
          type: string
          description: descripcion del producto
        price:
          type: number
          description: precio base del producto
        stock:
          type: number
          description: cantidad de unidades disponibles del producto
        code:
          type: string
          description: codigo general del producto
        category:
          type: string
          description: categoria a la cual pertenece el producto
        status:
          type: boolean
          description: estado de disponibilidad del producto
        img:
          type: string
          description: url de la imagen descriptiva del producto
        owner:
          require: false
          type: string
          description: rol del usuario que creo el producto
  requestBodies:
    addProductDb:
      description: Body con la informacion necesaria para crear un nuevo producto con exito.
      properties:
        name:
          type: string
          description: nombre del producto.
        description:
          type: string
          description: descripcion del producto
        price:
          type: number
          description: precio base del producto
        stock:
          type: number
          description: cantidad de unidades disponibles del producto
        code:
          type: string
          description: codigo general del producto
        category:
          type: string
          description: categoria a la cual pertenece el producto
        status:
          type: boolean
          description: estado de disponibilidad del producto
        img:
          type: string
          description: url de la imagen descriptiva del producto
        owner:
          type: string
          description: rol del usuario que creo el producto
      example:
        name: Stanley Termo Clásico 1 L de acero inoxidable
        description: Conserva el agua fría y caliente hasta por 24 horas
        price: 600
        stock: 38
        code: 39ir-3kxi-d35s-2c8a
        category: termos
        status: true
        img: https://http2.mlstatic.com/D_NQ_NP_2X_823713-MLA46192402341_052021-F.webp
        owner:
    updateProduct:
      description: Body con la informacion necesaria para actualizar las propiedades  de un producto.
      properties:
        name:
          type: string
          description: nombre del producto.
        description:
          type: string
          description: descripcion del producto
        price:
          type: number
          description: precio base del producto
        stock:
          type: number
          description: cantidad de unidades disponibles del producto
        code:
          type: string
          description: codigo general del producto
        category:
          type: string
          description: categoria a la cual pertenece el producto
        status:
          type: boolean
          description: estado de disponibilidad del producto
        img:
          type: string
          description: url de la imagen descriptiva del producto
      example:
        price: 800
        img: https://http2.mlstatic.com/D_NQ_NP_2X_715578-MLA51200864887_082022-F.webp